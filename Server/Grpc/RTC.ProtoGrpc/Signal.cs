// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: signal.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace RTC.ProtoGrpc.SignalServer {

  /// <summary>Holder for reflection information generated from signal.proto</summary>
  public static partial class SignalReflection {

    #region Descriptor
    /// <summary>File descriptor for signal.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SignalReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxzaWduYWwucHJvdG8SGlJUQy5Qcm90b0dycGMuU2lnbmFsU2VydmVyGhln",
            "b29nbGUvcHJvdG9idWYvYW55LnByb3RvGgpkYXRhLnByb3RvIk8KDFJvdXRl",
            "TWVzc2FnZRIOCgZmcm9tSWQYASABKAkSDAoEdG9JZBgCIAEoCRIhCgNtc2cY",
            "AyABKAsyFC5nb29nbGUucHJvdG9idWYuQW55IkAKC0MyU19Db25uZWN0EjEK",
            "B3Nlc3Npb24YASABKAsyIC5SVEMuUHJvdG9HcnBjLkRhdGEuVG9rZW5TZXNz",
            "aW9uIj8KC0NyZWF0ZU9mZmVyEhsKE3JlY2VpdmVDb25uZWN0aW9uSWQYASAB",
            "KAkSEwoLZGVzY3JpcHRpb24YAiABKAkiPwoLQW5zd2VyT2ZmZXISGwoTcmVj",
            "ZWl2ZUNvbm5lY3Rpb25JZBgBIAEoCRITCgtkZXNjcmlwdGlvbhgCIAEoCSIk",
            "CgxJY2VDYW5kaWRhdGUSFAoMaWNlQ2FuZGlkYXRlGAEgASgJIh8KClBlZXJP",
            "bmxpbmUSEQoJc2Vzc2lvbklkGAEgASgJIiAKC1BlZXJPZmZMaW5lEhEKCXNl",
            "c3Npb25JZBgBIAEoCSIrChNDMlNfUXVlcnlQbGF5ZXJMaXN0EhQKDGNvbm5l",
            "Y3Rpb25JZBgBIAEoCSImChNTMkNfUXVlcnlQbGF5ZXJMaXN0Eg8KB3BsYXlp",
            "ZXMYASADKAkytwIKE1NpZ25hbFNlcnZlclNlcnZpY2USXgoHQ29ubmVjdBIn",
            "LlJUQy5Qcm90b0dycGMuU2lnbmFsU2VydmVyLkMyU19Db25uZWN0GiguUlRD",
            "LlByb3RvR3JwYy5TaWduYWxTZXJ2ZXIuUm91dGVNZXNzYWdlMAESSwoFUm91",
            "dGUSKC5SVEMuUHJvdG9HcnBjLlNpZ25hbFNlcnZlci5Sb3V0ZU1lc3NhZ2Ua",
            "GC5SVEMuUHJvdG9HcnBjLkRhdGEuVm9pZBJzCg9RdWVyeVBsYXllckxpc3QS",
            "Ly5SVEMuUHJvdG9HcnBjLlNpZ25hbFNlcnZlci5DMlNfUXVlcnlQbGF5ZXJM",
            "aXN0Gi8uUlRDLlByb3RvR3JwYy5TaWduYWxTZXJ2ZXIuUzJDX1F1ZXJ5UGxh",
            "eWVyTGlzdGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.AnyReflection.Descriptor, global::RTC.ProtoGrpc.Data.DataReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::RTC.ProtoGrpc.SignalServer.RouteMessage), global::RTC.ProtoGrpc.SignalServer.RouteMessage.Parser, new[]{ "FromId", "ToId", "Msg" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RTC.ProtoGrpc.SignalServer.C2S_Connect), global::RTC.ProtoGrpc.SignalServer.C2S_Connect.Parser, new[]{ "Session" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RTC.ProtoGrpc.SignalServer.CreateOffer), global::RTC.ProtoGrpc.SignalServer.CreateOffer.Parser, new[]{ "ReceiveConnectionId", "Description" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RTC.ProtoGrpc.SignalServer.AnswerOffer), global::RTC.ProtoGrpc.SignalServer.AnswerOffer.Parser, new[]{ "ReceiveConnectionId", "Description" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RTC.ProtoGrpc.SignalServer.IceCandidate), global::RTC.ProtoGrpc.SignalServer.IceCandidate.Parser, new[]{ "IceCandidate_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RTC.ProtoGrpc.SignalServer.PeerOnline), global::RTC.ProtoGrpc.SignalServer.PeerOnline.Parser, new[]{ "SessionId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RTC.ProtoGrpc.SignalServer.PeerOffLine), global::RTC.ProtoGrpc.SignalServer.PeerOffLine.Parser, new[]{ "SessionId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RTC.ProtoGrpc.SignalServer.C2S_QueryPlayerList), global::RTC.ProtoGrpc.SignalServer.C2S_QueryPlayerList.Parser, new[]{ "ConnectionId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RTC.ProtoGrpc.SignalServer.S2C_QueryPlayerList), global::RTC.ProtoGrpc.SignalServer.S2C_QueryPlayerList.Parser, new[]{ "Playies" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class RouteMessage : pb::IMessage<RouteMessage> {
    private static readonly pb::MessageParser<RouteMessage> _parser = new pb::MessageParser<RouteMessage>(() => new RouteMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RouteMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RTC.ProtoGrpc.SignalServer.SignalReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RouteMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RouteMessage(RouteMessage other) : this() {
      fromId_ = other.fromId_;
      toId_ = other.toId_;
      msg_ = other.msg_ != null ? other.msg_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RouteMessage Clone() {
      return new RouteMessage(this);
    }

    /// <summary>Field number for the "fromId" field.</summary>
    public const int FromIdFieldNumber = 1;
    private string fromId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FromId {
      get { return fromId_; }
      set {
        fromId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "toId" field.</summary>
    public const int ToIdFieldNumber = 2;
    private string toId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ToId {
      get { return toId_; }
      set {
        toId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Any msg_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Any Msg {
      get { return msg_; }
      set {
        msg_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RouteMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RouteMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FromId != other.FromId) return false;
      if (ToId != other.ToId) return false;
      if (!object.Equals(Msg, other.Msg)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FromId.Length != 0) hash ^= FromId.GetHashCode();
      if (ToId.Length != 0) hash ^= ToId.GetHashCode();
      if (msg_ != null) hash ^= Msg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FromId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FromId);
      }
      if (ToId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ToId);
      }
      if (msg_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Msg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FromId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FromId);
      }
      if (ToId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ToId);
      }
      if (msg_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Msg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RouteMessage other) {
      if (other == null) {
        return;
      }
      if (other.FromId.Length != 0) {
        FromId = other.FromId;
      }
      if (other.ToId.Length != 0) {
        ToId = other.ToId;
      }
      if (other.msg_ != null) {
        if (msg_ == null) {
          msg_ = new global::Google.Protobuf.WellKnownTypes.Any();
        }
        Msg.MergeFrom(other.Msg);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FromId = input.ReadString();
            break;
          }
          case 18: {
            ToId = input.ReadString();
            break;
          }
          case 26: {
            if (msg_ == null) {
              msg_ = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(msg_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class C2S_Connect : pb::IMessage<C2S_Connect> {
    private static readonly pb::MessageParser<C2S_Connect> _parser = new pb::MessageParser<C2S_Connect>(() => new C2S_Connect());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_Connect> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RTC.ProtoGrpc.SignalServer.SignalReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_Connect() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_Connect(C2S_Connect other) : this() {
      session_ = other.session_ != null ? other.session_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_Connect Clone() {
      return new C2S_Connect(this);
    }

    /// <summary>Field number for the "session" field.</summary>
    public const int SessionFieldNumber = 1;
    private global::RTC.ProtoGrpc.Data.TokenSession session_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RTC.ProtoGrpc.Data.TokenSession Session {
      get { return session_; }
      set {
        session_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_Connect);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_Connect other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Session, other.Session)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (session_ != null) hash ^= Session.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (session_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Session);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (session_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Session);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_Connect other) {
      if (other == null) {
        return;
      }
      if (other.session_ != null) {
        if (session_ == null) {
          session_ = new global::RTC.ProtoGrpc.Data.TokenSession();
        }
        Session.MergeFrom(other.Session);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (session_ == null) {
              session_ = new global::RTC.ProtoGrpc.Data.TokenSession();
            }
            input.ReadMessage(session_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateOffer : pb::IMessage<CreateOffer> {
    private static readonly pb::MessageParser<CreateOffer> _parser = new pb::MessageParser<CreateOffer>(() => new CreateOffer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateOffer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RTC.ProtoGrpc.SignalServer.SignalReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateOffer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateOffer(CreateOffer other) : this() {
      receiveConnectionId_ = other.receiveConnectionId_;
      description_ = other.description_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateOffer Clone() {
      return new CreateOffer(this);
    }

    /// <summary>Field number for the "receiveConnectionId" field.</summary>
    public const int ReceiveConnectionIdFieldNumber = 1;
    private string receiveConnectionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReceiveConnectionId {
      get { return receiveConnectionId_; }
      set {
        receiveConnectionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateOffer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateOffer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReceiveConnectionId != other.ReceiveConnectionId) return false;
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReceiveConnectionId.Length != 0) hash ^= ReceiveConnectionId.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReceiveConnectionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ReceiveConnectionId);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReceiveConnectionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReceiveConnectionId);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateOffer other) {
      if (other == null) {
        return;
      }
      if (other.ReceiveConnectionId.Length != 0) {
        ReceiveConnectionId = other.ReceiveConnectionId;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ReceiveConnectionId = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AnswerOffer : pb::IMessage<AnswerOffer> {
    private static readonly pb::MessageParser<AnswerOffer> _parser = new pb::MessageParser<AnswerOffer>(() => new AnswerOffer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AnswerOffer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RTC.ProtoGrpc.SignalServer.SignalReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnswerOffer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnswerOffer(AnswerOffer other) : this() {
      receiveConnectionId_ = other.receiveConnectionId_;
      description_ = other.description_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnswerOffer Clone() {
      return new AnswerOffer(this);
    }

    /// <summary>Field number for the "receiveConnectionId" field.</summary>
    public const int ReceiveConnectionIdFieldNumber = 1;
    private string receiveConnectionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReceiveConnectionId {
      get { return receiveConnectionId_; }
      set {
        receiveConnectionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AnswerOffer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AnswerOffer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReceiveConnectionId != other.ReceiveConnectionId) return false;
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReceiveConnectionId.Length != 0) hash ^= ReceiveConnectionId.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReceiveConnectionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ReceiveConnectionId);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReceiveConnectionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReceiveConnectionId);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AnswerOffer other) {
      if (other == null) {
        return;
      }
      if (other.ReceiveConnectionId.Length != 0) {
        ReceiveConnectionId = other.ReceiveConnectionId;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ReceiveConnectionId = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class IceCandidate : pb::IMessage<IceCandidate> {
    private static readonly pb::MessageParser<IceCandidate> _parser = new pb::MessageParser<IceCandidate>(() => new IceCandidate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IceCandidate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RTC.ProtoGrpc.SignalServer.SignalReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IceCandidate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IceCandidate(IceCandidate other) : this() {
      iceCandidate_ = other.iceCandidate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IceCandidate Clone() {
      return new IceCandidate(this);
    }

    /// <summary>Field number for the "iceCandidate" field.</summary>
    public const int IceCandidate_FieldNumber = 1;
    private string iceCandidate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IceCandidate_ {
      get { return iceCandidate_; }
      set {
        iceCandidate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IceCandidate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IceCandidate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IceCandidate_ != other.IceCandidate_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IceCandidate_.Length != 0) hash ^= IceCandidate_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IceCandidate_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(IceCandidate_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IceCandidate_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IceCandidate_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IceCandidate other) {
      if (other == null) {
        return;
      }
      if (other.IceCandidate_.Length != 0) {
        IceCandidate_ = other.IceCandidate_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            IceCandidate_ = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PeerOnline : pb::IMessage<PeerOnline> {
    private static readonly pb::MessageParser<PeerOnline> _parser = new pb::MessageParser<PeerOnline>(() => new PeerOnline());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PeerOnline> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RTC.ProtoGrpc.SignalServer.SignalReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeerOnline() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeerOnline(PeerOnline other) : this() {
      sessionId_ = other.sessionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeerOnline Clone() {
      return new PeerOnline(this);
    }

    /// <summary>Field number for the "sessionId" field.</summary>
    public const int SessionIdFieldNumber = 1;
    private string sessionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PeerOnline);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PeerOnline other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionId != other.SessionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SessionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SessionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PeerOnline other) {
      if (other == null) {
        return;
      }
      if (other.SessionId.Length != 0) {
        SessionId = other.SessionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SessionId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PeerOffLine : pb::IMessage<PeerOffLine> {
    private static readonly pb::MessageParser<PeerOffLine> _parser = new pb::MessageParser<PeerOffLine>(() => new PeerOffLine());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PeerOffLine> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RTC.ProtoGrpc.SignalServer.SignalReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeerOffLine() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeerOffLine(PeerOffLine other) : this() {
      sessionId_ = other.sessionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeerOffLine Clone() {
      return new PeerOffLine(this);
    }

    /// <summary>Field number for the "sessionId" field.</summary>
    public const int SessionIdFieldNumber = 1;
    private string sessionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PeerOffLine);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PeerOffLine other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionId != other.SessionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SessionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SessionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PeerOffLine other) {
      if (other == null) {
        return;
      }
      if (other.SessionId.Length != 0) {
        SessionId = other.SessionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SessionId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class C2S_QueryPlayerList : pb::IMessage<C2S_QueryPlayerList> {
    private static readonly pb::MessageParser<C2S_QueryPlayerList> _parser = new pb::MessageParser<C2S_QueryPlayerList>(() => new C2S_QueryPlayerList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_QueryPlayerList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RTC.ProtoGrpc.SignalServer.SignalReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_QueryPlayerList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_QueryPlayerList(C2S_QueryPlayerList other) : this() {
      connectionId_ = other.connectionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_QueryPlayerList Clone() {
      return new C2S_QueryPlayerList(this);
    }

    /// <summary>Field number for the "connectionId" field.</summary>
    public const int ConnectionIdFieldNumber = 1;
    private string connectionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConnectionId {
      get { return connectionId_; }
      set {
        connectionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_QueryPlayerList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_QueryPlayerList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConnectionId != other.ConnectionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ConnectionId.Length != 0) hash ^= ConnectionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ConnectionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ConnectionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ConnectionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_QueryPlayerList other) {
      if (other == null) {
        return;
      }
      if (other.ConnectionId.Length != 0) {
        ConnectionId = other.ConnectionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ConnectionId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S2C_QueryPlayerList : pb::IMessage<S2C_QueryPlayerList> {
    private static readonly pb::MessageParser<S2C_QueryPlayerList> _parser = new pb::MessageParser<S2C_QueryPlayerList>(() => new S2C_QueryPlayerList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_QueryPlayerList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RTC.ProtoGrpc.SignalServer.SignalReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_QueryPlayerList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_QueryPlayerList(S2C_QueryPlayerList other) : this() {
      playies_ = other.playies_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_QueryPlayerList Clone() {
      return new S2C_QueryPlayerList(this);
    }

    /// <summary>Field number for the "playies" field.</summary>
    public const int PlayiesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_playies_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> playies_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Playies {
      get { return playies_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_QueryPlayerList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_QueryPlayerList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!playies_.Equals(other.playies_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= playies_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      playies_.WriteTo(output, _repeated_playies_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += playies_.CalculateSize(_repeated_playies_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_QueryPlayerList other) {
      if (other == null) {
        return;
      }
      playies_.Add(other.playies_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            playies_.AddEntriesFrom(input, _repeated_playies_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
